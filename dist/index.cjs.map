{"version":3,"file":"index.cjs.js","sources":["../webpack://validate-dependabot-vulnerabilities-action/./src/validateDependencies.js","../webpack://validate-dependabot-vulnerabilities-action/webpack/bootstrap","../webpack://validate-dependabot-vulnerabilities-action/webpack/runtime/make namespace object","../webpack://validate-dependabot-vulnerabilities-action/webpack/runtime/compat","../webpack://validate-dependabot-vulnerabilities-action/./src/index.cjs"],"sourcesContent":["const {Octokit} = require('octokit')\n\nconst errorMessage = 'Build contains vulnerabilities that violate Adatree\\'s infosec policy. Please check dependabot alerts.'\nconst millisecondsInOneDay = 24 * 60 * 60 * 1000\n\nconst validateDependencies = async () => {\n    const auth = process.env.GH_TOKEN\n    const owner = 'Adatree'\n    const openState = 'open'\n    const octokit = new Octokit({auth})\n    const repo = process.env.GITHUB_REPOSITORY.split('/')[1]\n    console.log(`Retrieving dependabot alerts for repository ${repo}`)\n    const response = await octokit.request('GET /repos/{owner}/{repo}/dependabot/alerts{?state,severity,ecosystem,package,manifest,scope,sort,direction,page,per_page,before,after,first,last}', {\n        owner,\n        repo\n    })\n    const relevantAlerts = response.data.filter(alert => alert.state === openState)\n    if (relevantAlerts.length === 0) {\n        console.log('Build is safe and respects the Adatree infosec policy')\n    } else {\n        console.log(relevantAlerts)\n        const alertsGroupedBySeverity = relevantAlerts.reduce((acc, alert) => {\n            const {severity} = alert.security_vulnerability\n            acc[severity] = acc[severity] || []\n            acc[severity].push(alert)\n            return acc\n        }, {})\n        const {critical, high, medium} = alertsGroupedBySeverity\n        validateCriticalAlerts(critical)\n        validateHighAlerts(high)\n        validateMediumAlerts(medium)\n        console.log('Dependabot alerts identified but none violates Adatree\\'s infosec policy.')\n    }\n}\n\n// 48 hours\nconst validateCriticalAlerts = alerts => validateAlert(alerts, new Date().getTime() - millisecondsInOneDay * 2)\n\n// 2 weeks\nconst validateHighAlerts = alerts => validateAlert(alerts, new Date().getTime() - millisecondsInOneDay * 14)\n\n// 1 month\nconst validateMediumAlerts = alerts => validateAlert(alerts, new Date().getTime() - millisecondsInOneDay * 30)\n\nconst validateAlert = (alerts = [], timestamp) => {\n    alerts.forEach(alert => {\n        const publishedAt = Date.parse(alert.security_advisory.published_at)\n        if (publishedAt < timestamp && alert.security_vulnerability.first_patched_version) {\n            console.log(`patch is available and a fix is due - ${JSON.stringify(alert, null, 2)}`)\n            throw new Error(errorMessage)\n        }\n    })\n}\n\nmodule.exports = {validateDependencies, millisecondsInOneDay}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","const {validateDependencies} = require('./validateDependencies.js')\n\nasync function run() {\n  await validateDependencies()\n}\n\nrun();\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;A","sourceRoot":""}